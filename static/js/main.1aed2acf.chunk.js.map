{"version":3,"sources":["common.js","NavBar.js","Tooltip.js","Info.js","Skill.js","App.js","index.js"],"names":["loadData","src","Promise","resolve","reject","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","status","response","send","loadEnemyData","enemyIndex","then","enemyDataList","enemyData","getURLParameter","sParam","sURLVariables","window","location","search","substring","split","i","length","sParameterName","Hangul","require","NavBar","state","showSearchResult","showIndexResult","SearchList","ResultListStyle","IndexResultListStyle","ContainerStyle","NameList","isResultClosing","isSearchResultClosed","updateSearchList","revstate","str","searcher","Searcher","searchlist","Object","keys","reduce","acc","curr","push","sort","a","b","map","elem","openResultList","console","log","matchMedia","matches","maxHeight","document","querySelector","scrollHeight","closeResultList","openIndexResultList","index","maxHeightIndex","closeIndexResultList","handleResultsToggleClick","value","newstate","setState","prevstate","handleInputFocus","handleInputChange","e","target","scrollTo","handleResultsClick","name","handleIndexResultsClick","typeindex","props","onEnemyChange","scrollToIndex","values","indexOf","resetSearchResult","includes","this","className","onClick","style","opacity","type","placeholder","onFocus","onChange","React","Component","List","searchresults","indexes","key","id","indexacc","indexcurr","onTransitionEnd","Tooltip","base","tooltipdata","increment","lvlpool","children","isStatExpanded","Info","toggleExpandStat","calcLvlValue","data","lvl","Math","floor","handleLvlPlus","onLvlChange","handleLvlMinus","handleLvlChange","img","alt","readOnly","HP","ATK","HIT","CRT","DEF","DOD","AGI","resist","Skill","displayedEnemyName","changeDisplayedSkill","displayedSkill","propsdata","skillData","btnlist","skillNavWrapClass","skilldata","enemyInfo","info","SkillView","attr","undefined","skillpower","description","match","skillrate","area","areadata","some","el","rgb","round","backgroundColor","replace","line","range","AP","InfoView","App","Common","enemySkillList","skillDataList","enemyLVL","searchresult","Map","lvlsearchresult","areadatalist","forEach","searcharea","stage","filter","stageelem","wave","waveelem","enemylist","pos","obj","title","has","get","set","uncertainstat","level","parseInt","skills","loadAreaData","arealist","all","areaindex","areaNum","areaData","action","handleEnemyChange","toggleExpandStage","isStageExpanded","trackScrolling","wrappedElement","isBottom","removeEventListener","getBoundingClientRect","bottom","innerHeight","addEventListener","SpottedStage","Stage","size","Array","from","colSpan","isNaN","href","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1aed2acf.chunk.js","sourcesContent":["//파일명 설정\nvar setting = '.min';\n//var setting = '';\n\n//공통 데이터 로드 함수\nfunction loadData(src)\n{\n\t//XMLHttpRequest를 사용해 데이터 파일 로드\n\t//로드가 완료되면 다음 작업을 진행하도록 Promise 적용\n\treturn new Promise((resolve, reject) =>\n\t{\n\t\tvar request = new XMLHttpRequest();\n\t\trequest.open('GET', src);\n\t\trequest.responseType = 'json';\n\t\trequest.onreadystatechange = function ()\n\t\t{\n\t\t\tif (request.readyState === XMLHttpRequest.DONE && request.status === 200)\n\t\t\t{\n\t\t\t\tresolve(request.response);\n\t\t\t}\n\t\t};\n\t\trequest.send();\n\t});\n}\n\n//구형 데이터 로드 함수\nexport function loadDataOld(src)\n{\n\t//<script> 요소를 추가해 데이터 파일 로드\n\t//로드가 완료되면 다음 작업을 진행하도록 Promise 적용\n\treturn new Promise((resolve, reject) =>\n\t{\n\t\tvar script = document.createElement('script');\n\t\tscript.type = \"text/javascript\";\n\t\tscript.src = src;\n\t\tscript.addEventListener('load', () => { resolve(); }, false);\n\t\tscript.addEventListener('error', () => { reject(); }, false);\n\t\tvar s = document.getElementsByTagName(\"script\")[0];\n\t\ts.parentNode.insertBefore(script, s);\n\t});\n}\n\n//지역 데이터 로드 함수\nexport function loadAreaData(areaNum)\n{\n\treturn new Promise((resolve, reject) =>\n\t{\n\t\t//src를 지역 데이터 파일 주소로 설정해 데이터 파일을 로드하고 areaData 오브젝트 리턴\n\t\tvar src = \"data/data-area\" + areaNum + setting + \".json\";\n\t\tloadData(src).then((areaData) => resolve(areaData), () => reject());\n\t});\n}\n\n//ステージ 데이터 로드 함수\nexport function loadStageData(stageTitle)\n{\n\treturn new Promise(resolve =>\n\t{\n\t\t//src를 지역 데이터 파일로 설정해 로드\n\t\tvar src = \"./data/data-area\" + getAreaByStageTitle(stageTitle) + setting + \".json\";\n\t\tloadData(src).then((areaData) =>\n\t\t{\n\t\t\tvar stageData = areaData.stage.find(sData => sData.title === stageTitle);\n\t\t\tvar type = getTypeByStageTitle(stageTitle)\n\t\t\tvar stageList = areaData.stage.reduce((acc, sData) =>\n\t\t\t{\n\t\t\t\tif (getTypeByStageTitle(sData.title) === type) acc.push(getIndexByStageTitle(sData.title))\n\t\t\t\treturn acc;\n\t\t\t}, []);\n\t\t\tresolve({ \"stageData\": stageData, \"stageList\": stageList });\n\t\t});\n\n\t});\n}\n\nexport function loadEnemyDataList()\n{\n\treturn new Promise(resolve =>\n\t{\n\t\tvar src = \"./data/data-enemy\" + setting + \".json\";\n\t\tloadData(src).then((enemyDataList) =>\n\t\t{\n\t\t\tresolve(enemyDataList);\n\t\t});\n\t});\n}\n\nexport function loadEnemyData(enemyIndex)\n{\n\treturn new Promise(resolve =>\n\t{\n\t\tvar src = \"./data/data-enemy\" + setting + \".json\";\n\t\tloadData(src).then((enemyDataList) =>\n\t\t{\n\t\t\tvar enemyData = enemyDataList[enemyIndex];\n\t\t\tresolve(enemyData);\n\t\t});\n\t});\n}\n\n/*\nfunction loadEnemyIMGData()\n{\n\treturn new Promise(resolve=> {\n\t\tvar src=\"./data/data-enemy\"+setting+\".json\";\n\t\tloadData(src).then(()=> {\n\t\t\tvar enemyIMGData={};\n\t\t\tfor (var key in enemyDataList)\n\t\t\t{\n\t\t\t\tif (enemyDataList.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tenemyIMGData[key] = enemyDataList[key].img;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//var enemyIMGData=enemyDataList.map(data => {return {\"name\": data.name, \"img\": data.img}; });\n\t\t\t//resolve(enemyIMGData);\n\t\t\tresolve(enemyIMGData);\n\t\t});\n\t});\n}\n\nfunction loadEnemyDescData()\n{\n\treturn new Promise(resolve=> {\n\t\tvar src=\"./data/data-enemy\"+setting+\".json\";\n\t\tloadData(src).then(()=> {\n\t\t\tvar enemyDescData=enemyDataList.map(data => {\n\t\t\t\tvar rtn = {\"name\": data.name, \"img\": data.img};\n\t\t\t\tif('resist' in data) rtn[\"resist\"] = data.resist;\n\t\t\t\tif('CRT' in data) rtn[\"CRT\"] = data.CRT;\n\t\t\t\treturn rtn;\n\t\t\t});\n\t\t\tresolve(enemyDescData);\n\t\t});\n\t});\n}\n*/\n\nexport function loadSkillDataList()\n{\n\treturn new Promise(resolve =>\n\t{\n\t\tvar src = \"./data/data-skill\" + setting + \".json\";\n\t\tloadData(src).then((enemySkillList) =>\n\t\t{\n\t\t\tresolve(enemySkillList);\n\t\t});\n\t});\n}\n\nexport function getURLParameter(sParam)\n{\n\tvar sPageURL = window.location.search.substring(1);\n\tvar sURLVariables = sPageURL.split('&');\n\tfor (var i = 0; i < sURLVariables.length; i++)\n\t{\n\t\tvar sParameterName = sURLVariables[i].split('=');\n\t\tif (sParameterName[0] === sParam) { return sParameterName[1]; }\n\t}\n}\n\nexport function getAreaByStageTitle(str)\n{\n\tvar regex = /^[0-9a-zA-Z]+/;\n\treturn str.match(regex)[0];\n}\n\nexport function getIndexByStageTitle(str)\n{\n\tvar regex = /-[0-9]+/;\n\treturn Number(str.match(regex)[0].slice(1));\n}\n\nexport function getTypeByStageTitle(str)\n{\n\tvar regex = /[a-zA-Z]*$/;\n\treturn str.match(regex)[0];\n}\n\nexport function getIndexByStageGrid(grid)\n{\n\treturn grid[0];\n}\n\nexport function getTypeByStageGrid(grid)\n{\n\tvar stageTypeTitle = [\"B\", \"\", \"Ex\"];\n\treturn stageTypeTitle[grid[1]];\n}","import React from \"react\";\nimport * as Common from \"./common.js\";\n\nconst Hangul = require(\"hangul-js\");\n\nclass NavBar extends React.Component\n{\n  state = {\n    showSearchResult: false,\n    showIndexResult: false,\n    SearchList: null,\n    ResultListStyle: null,\n    IndexResultListStyle: null,\n    ContainerStyle: null\n  };\n\n  NameList = null;\n  isResultClosing = false;\n  isSearchResultClosed = true;\n\n  updateSearchList = (revstate, str) =>\n  {\n    revstate.showSearchResult = true;\n    revstate.showIndexResult = false;\n\n    if (str.length > 0)\n    {\n      let searcher = new Hangul.Searcher(str);\n\n      let searchlist = Object.keys(this.NameList)\n        .reduce((acc, curr) =>\n        {\n          if (searcher.search(curr) !== -1)\n          {\n            acc.push([curr, searcher.search(curr)]);\n          }\n          return acc;\n        }, [])\n        .sort((a, b) =>\n        {\n          if (a[1] < b[1]) return -1;\n          if (a[1] > b[1]) return 1;\n          return a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : 0;\n        })\n        .map(elem => elem[0]);\n      revstate.SearchList = searchlist;\n    }\n    else\n    {\n      revstate.SearchList = Object.keys(this.NameList);\n    }\n  };\n\n  openResultList = revstate =>\n  {\n    console.log(\"openResultList\")\n    revstate.showSearchResult = true;\n    if (!matchMedia(\"(min-width: 1100px)\").matches)\n    {\n      let maxHeight = document.querySelector(\".list\").scrollHeight + \"px\";\n      revstate.ResultListStyle = { ...this.state.ResultListStyle, \"maxHeight\": maxHeight };\n    }\n  }\n\n  closeResultList = revstate =>\n  {\n    console.log(\"closeResultList\")\n    revstate.showSearchResult = false;\n    if (!matchMedia(\"(min-width: 1100px)\").matches)\n    {\n      revstate.ResultListStyle = { ...this.state.ResultListStyle, \"maxHeight\": null };\n      this.isResultClosing = true;\n    }\n  }\n\n  openIndexResultList = (revstate, index) =>\n  {\n    console.log(\"openIndexResultList\")\n    revstate.showIndexResult = index;\n    if (matchMedia(\"(min-width: 1100px)\").matches)\n    {\n      let maxWidth = \"230px\";\n      let opacity = 1;\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxWidth\": maxWidth, \"opacity\": opacity };\n    }\n    else\n    {\n      let maxHeightIndex = document.querySelector(\"#\" + index).scrollHeight + \"px\";\n      let maxHeight = document.querySelector(\".list\").scrollHeight + document.querySelector(\"#\" + index).scrollHeight + \"px\";\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxHeight\": maxHeightIndex };\n      revstate.ResultListStyle = { ...this.state.IndexResultListStyle, \"maxHeight\": maxHeight };\n    }\n  };\n\n  closeIndexResultList = revstate =>\n  {\n    console.log(\"closeIndexResultList\")\n    revstate.showIndexResult = false;\n    if (matchMedia(\"(min-width: 1100px)\").matches)\n    {\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxWidth\": null, \"opacity\": null };\n    }\n    else\n    {\n      revstate.IndexResultListStyle = { ...this.state.IndexResultListStyle, \"maxHeight\": null };\n    }\n  };\n\n  handleResultsToggleClick = () =>\n  {\n    document.querySelector(\".navbar-input\").value = null;\n    let newstate = {};\n    if (this.state.showSearchResult)\n    {\n      this.closeResultList(newstate);\n    }\n    else\n    {\n      this.openResultList(newstate);\n    }\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\n  }\n\n  handleInputFocus = () =>\n  {\n    console.log(\"handleInputFocus\")\n    let newstate = {};\n    this.openResultList(newstate);\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\n  }\n\n  handleInputChange = e =>\n  {\n    console.log(\"handleInputChange\")\n    let newstate = {};\n    this.updateSearchList(newstate, e.target.value);\n    this.closeIndexResultList(newstate);\n    window.scrollTo(0, 0);\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\n  }\n\n  handleResultsClick = (name, index) =>\n  {\n    let newstate = {};\n    if (this.state.showIndexResult)\n    {\n      this.closeIndexResultList(newstate);\n    }\n    if (index !== this.state.showIndexResult)\n    {\n      this.openIndexResultList(newstate, index);\n    }\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\n  };\n\n  handleIndexResultsClick = (index, typeindex) =>\n  {\n    this.props.onEnemyChange(index);\n    let newstate = {};\n    this.closeResultList(newstate);\n    document.querySelector(\".navbar-input\").value = null;\n    if (matchMedia(\"(min-width: 1100px)\").matches)\n    {\n      this.openIndexResultList(newstate, this.state.showIndexResult);\n      newstate.SearchList = Object.keys(this.NameList);\n    }\n    this.isResultClosing = true;\n    this.setState(prevstate => ({ ...prevstate, ...newstate }));\n  };\n\n  scrollToIndex = typeindex => \n  {\n    window.scrollTo(0, Object.values(this.NameList).map(elem => elem[0]).indexOf(typeindex) * 50);\n  }\n\n  resetSearchResult = () =>\n  {\n    console.log(\"resetSearchResult\")\n    if (!matchMedia(\"(min-width: 1100px)\").matches && this.isResultClosing)\n    {\n      this.isResultClosing = false;\n      let newstate = {};\n      this.closeIndexResultList(newstate);\n      this.setState(prevstate => ({\n        ...prevstate,\n        ...newstate,\n        \"showSearchResult\": false,\n        \"showIndexResult\": false,\n        \"SearchList\": Object.keys(this.NameList)\n      }));\n    }\n  }\n\n  componentDidMount()\n  {\n    (async () =>\n    {\n      let enemyDataList = await Common.loadEnemyDataList();\n      this.NameList = Object.keys(enemyDataList).reduce((acc, curr) =>\n      {\n        if (!Object.keys(acc).includes(enemyDataList[curr].name))\n        {\n          acc[enemyDataList[curr].name] = [curr];\n        }\n        else\n        {\n          acc[enemyDataList[curr].name].push(curr);\n        }\n        return acc;\n      }, {});\n      this.setState(prevstate => ({\n        ...prevstate,\n        \"showSearchResult\": false,\n        \"showIndexResult\": false,\n        \"SearchList\": Object.keys(this.NameList)\n      }));\n    })();\n  }\n\n  componentDidUpdate()\n  {\n    if (matchMedia(\"(min-width: 1100px)\").matches)\n    {\n      if (this.isResultClosing)\n      {\n        this.scrollToIndex(this.state.showIndexResult);\n        this.isResultClosing = false;\n      }\n    }\n  }\n\n  render()\n  {\n    console.log(\"renderNavBar\")\n    return (\n      <div className=\"nav\">\n        <div className=\"navbar\">\n          <div className=\"navbar-button\" onClick={this.handleResultsToggleClick}>\n            <i className=\"material-icons material-icons-list\" style={this.state.showSearchResult ? { opacity: 0 } : null}>list</i>\n            <i className=\"material-icons material-icons-close\" style={this.state.showSearchResult ? null : { opacity: 0 }}>close</i>\n          </div>\n          <input type=\"text\" className=\"navbar-input\" placeholder=\"이름을 입력하세요.\" onFocus={this.handleInputFocus} onChange={this.handleInputChange}></input>\n          <div className=\"navbar-input-icon\">\n            <i className=\"material-icons\">search</i>\n          </div>\n        </div>\n        <List\n          SearchList={this.state.SearchList}\n          NameList={this.NameList}\n          handleResultsClick={this.handleResultsClick}\n          handleIndexResultsClick={this.handleIndexResultsClick}\n          resetSearchResult={this.resetSearchResult}\n          ResultListStyle={this.state.ResultListStyle}\n          showIndexResult={this.state.showIndexResult}\n          IndexResultListStyle={this.state.IndexResultListStyle}\n        />\n      </div>\n    );\n  }\n}\n\nclass List extends React.Component\n{\n  render()\n  {\n    let searchresults = this.props.SearchList == null ? [] :\n      this.props.SearchList.reduce((acc, curr) =>\n      {\n        let name = curr;\n        let indexes = this.props.NameList[curr];\n        let typeindex = indexes[0];\n        acc.value.push(\n          <div className=\"list-result-container\" key={typeindex + \"container\"} id={typeindex + \"container\"}>\n            <li className=\"list-result\" key={typeindex} onClick={() => { this.props.handleResultsClick(name, typeindex); }}>{name}</li>\n            <ul className=\"list list-index\" id={typeindex} key={typeindex + \"indexlist\"}\n              style={typeindex === this.props.showIndexResult ? this.props.IndexResultListStyle : null\n              }>\n              {indexes.reduce((indexacc, indexcurr) =>\n              {\n                indexacc.index++;\n                indexacc.value.push(<li className=\"list-result list-indexresult\" key={indexcurr} onClick={() => { this.props.handleIndexResultsClick(indexcurr, typeindex); }}>{name + \" \" + (indexacc.index)}</li>);\n                return indexacc;\n              }, { index: 0, value: [] }).value}\n            </ul>\n          </div>\n        );\n        acc.index++;\n        return acc;\n      }, { value: [], index: 0 }).value;\n\n    return (\n      <ul className=\"list\" style={this.props.ResultListStyle} onTransitionEnd={this.props.resetSearchResult}>\n        {searchresults}\n      </ul>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, {Fragment} from 'react';\n\nclass Tooltip extends React.Component\n{\n  render()\n  {\n    const base = this.props.tooltipdata.base;\n    const increment = this.props.tooltipdata.increment;\n    const lvlpool = this.props.lvlpool;\n\n    if(lvlpool)\n    {\n      return (\n        <div className=\"tooltip tooltip-stat tooltip-uncertainstat\">\n          {this.props.children}\n        </div>\n      );\n    }\n    else if (this.props.isStatExpanded)\n    {\n      return (\n        <Fragment>\n          {this.props.children}\n          <div className=\"tooltip-innertext tooltip-innertext-expanded\" > {base} + {increment} / Lv</div >\n        </Fragment >\n      );\n    }\n    else return (\n      <div className=\"tooltip tooltip-stat\">\n        {this.props.children}\n        <div className=\"tooltip-innertext tooltip-innertext-right\">기본: {base}<br />레벨당 증가량: {increment}</div>\n      </div>\n    );\n  }\n}\n\nexport default Tooltip;","import React from 'react';\nimport Tooltip from './Tooltip.js';\n\nclass Info extends React.Component\n{\n  state = {\n    \"isStatExpanded\": false\n  }\n\n  toggleExpandStat = () =>\n  {\n    this.setState((prevstate) => ({ ...prevstate, \"isStatExpanded\": prevstate.isStatExpanded ^ true }));\n  };\n\n  calcLvlValue = (data, lvl) =>\n  {\n    return Math.floor(data.base + data.increment * (lvl - 1));\n  };\n\n  handleLvlPlus = () =>\n  {\n    this.props.onLvlChange('+');\n  };\n\n  handleLvlMinus = () =>\n  {\n    this.props.onLvlChange('-');\n  };\n\n  handleLvlChange = (e) =>\n  {\n    this.props.onLvlChange(e.target.value);\n  };\n\n  render()\n  {\n    const data = this.props.data;\n    const enemyData = data.enemyData;\n    const lvl = data.lvl;\n    return (\n      <div className=\"info-container\">\n        <div className=\"image\"><img src={\"images/profile/\" + enemyData.img + \".png\"} alt={enemyData.img} /></div>\n        <div className=\"type\">\n          <h4 id=\"type\">{enemyData.type}</h4>\n        </div>\n        <div className=\"name\">\n          <h2 id=\"name\">{enemyData.name}</h2>\n        </div>\n        <div className=\"LVL\">\n          <button className=\"lvl-change lvl-minus\" onClick={this.handleLvlMinus}><i className=\"material-icons\">remove</i></button>\n          <div>\n            <input className=\"lvl-header\" type=\"text\" value=\"Lv.\" readOnly></input>\n            <div className=\"tooltip\">\n              <input className=\"lvl-input\" type=\"text\" value={lvl} onChange={this.handleLvlChange}></input>\n              <div className=\"tooltip-innertext tooltip-innertext-bottom\">값을 직접 입력할 수 있습니다</div>\n            </div>\n          </div>\n          <button className=\"lvl-change lvl-plus\" onClick={this.handleLvlPlus}><i className=\"material-icons\">add</i></button>\n        </div>\n        <div className=\"spec-wrap\">\n          <div className=\"spec-item spec-item-header\" id=\"HP\"><img src=\"images/icon_HP2.png\" alt=\"HP Icon\" /><div>HP</div></div><div className=\"spec-item\" id=\"HP\"><Tooltip lvlpool={data.lvlpool} tooltipdata={{...enemyData.HP, \"increment\":Math.floor(enemyData.HP.increment)}} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue({...enemyData.HP, \"increment\":Math.floor(enemyData.HP.increment)}, lvl)}</span></Tooltip></div>\n          <div className=\"spec-item spec-item-header\"></div><div className=\"spec-item\" ></div>\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_ATK2.png\" alt=\"ATK Icon\" /><div>攻撃力</div></div><div className=\"spec-item\" id=\"ATK\"><Tooltip lvlpool={data.lvlpool} tooltipdata={enemyData.ATK} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue(enemyData.ATK, lvl)}</span></Tooltip></div>\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_HIT2.png\" alt=\"HIT Icon\" /><div>命中率</div></div><div className=\"spec-item\" id=\"HIT\">{enemyData.HIT} %</div>\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_CRT2.png\" alt=\"CRT Icon\" /><div>クリティカル</div></div><div className=\"spec-item\" id=\"CRT\">{enemyData.CRT} %</div>\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_DEF2.png\" alt=\"DEF Icon\" /><div>防御力</div></div><div className=\"spec-item\" id=\"DEF\"><Tooltip lvlpool={data.lvlpool} tooltipdata={enemyData.DEF} isStatExpanded={this.state.isStatExpanded}><span className=\"tooltip-text\" onClick={this.toggleExpandStat}>{this.calcLvlValue(enemyData.DEF, lvl)}</span></Tooltip></div>\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_DOD2.png\" alt=\"DOD Icon\" /><div>回避率</div></div><div className=\"spec-item\" id=\"DOD\">{enemyData.DOD} %</div>\n          <div className=\"spec-item spec-item-header\"><img src=\"images/icon_AGI.png\" alt=\"AGI Icon\" /><div>行動力</div></div><div className=\"spec-item\" id=\"AGI\">{enemyData.AGI}</div>\n          <div className=\"spec-item resist-wrap\">\n            <div className=\"spec-item resist resist-header\">属性抵抗</div>\n            <div className=\"spec-item resist\" id=\"fire\"><img className=\"icon-attr\" src=\"images/fire.png\" alt=\"fireicon\" /> {enemyData.resist[0]} %</div>\n            <div className=\"spec-item resist\" id=\"ice\"><img className=\"icon-attr\" src=\"images/ice.png\" alt=\"iceicon\" /> {enemyData.resist[1]} %</div>\n            <div className=\"spec-item resist\" id=\"electric\"><img className=\"icon-attr\" src=\"images/electric.png\" alt=\"electricicon\" /> {enemyData.resist[2]} %</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Info;","import React from 'react';\n\nclass Skill extends React.Component\n{\n  state = {\n    \"displayedSkill\": 0\n  };\n\n  displayedEnemyName = this.props.data.enemyData.name;\n\n  changeDisplayedSkill = (index) =>\n  {\n    this.setState({ \"displayedSkill\": index });\n  }\n\n  componentDidUpdate()\n  {\n    if(this.props.data.enemyData.name !== this.displayedEnemyName)\n    {\n      this.displayedEnemyName = this.props.data.enemyData.name;\n      this.setState({ \"displayedSkill\": 0 });\n    }\n  }\n\n  render()\n  {\n    const displayedSkill = this.state.displayedSkill;\n    const propsdata = this.props.data;\n    const enemyData = propsdata.enemyData;\n    const skillData = propsdata.skillData;\n    const lvl = propsdata.lvl;\n    let btnlist = skillData.map((data, index) => (\n      <button className={`btn skill-${data.type} ${displayedSkill === index ? \"active\" : \"\"}`} key={\"skillbtn\" + index} onClick={() => this.changeDisplayedSkill(index)}>\n        <img className={\"skill-icon\"} src={`images/SkillIcon/${data.img}_${data.type}.png`} alt={`${data.img}_${data.type} icon`} />\n      </button>\n    ));\n    btnlist.push(\n      <button className={`btn btn-info skill-active ${displayedSkill === skillData.length ? \"active\" : \"\"}`} key=\"skillinfobtn\" onClick={() => this.changeDisplayedSkill(skillData.length)}>\n        <img className=\"skill-icon info-icon\" src=\"images/info.png\" alt=\"info icon\" />\n      </button>\n    );\n\n    let skillNavWrapClass = \"skill-nav-wrap skill-active\";\n    if (displayedSkill < skillData.length)\n    {\n      skillNavWrapClass = \"skill-nav-wrap skill-\" + skillData[displayedSkill].type;\n    }\n\n    return (\n      <div className=\"skill-container\">\n        <div className=\"skill-header\">\n          <h3>スキル</h3>\n        </div>\n        <div className={skillNavWrapClass}>\n          <nav className=\"skill-nav\">\n            {btnlist}\n          </nav>\n        </div>\n        {\n          displayedSkill < skillData.length ?\n            <SkillView skilldata={skillData[displayedSkill]} ATK={enemyData.ATK} lvl={lvl} /> :\n            <InfoView enemyInfo={enemyData.info} />\n        }\n      </div>\n    );\n  }\n}\n\nclass SkillView extends React.Component\n{\n  render()\n  {\n    const skilldata = this.props.skilldata;\n    const ATK = this.props.ATK.base + this.props.ATK.increment * (this.props.lvl - 1);\n\n    let attr = \"normal\"\n    if (skilldata.attr !== undefined) { attr = skilldata.attr; }\n\n    let skillpower = \"\"\n    var m = skilldata.description.match(/\\$\\((\\d+\\.*\\d*)\\)/);\n    if (m != null)\n    {\n      let skillrate = skilldata.description.match(/\\$\\((\\d+\\.*\\d*)\\)/)[1];\n      skillpower = Math.floor(ATK * skillrate);\n      (skillpower<1) && (skillpower=1);\n    }\n\n    let area = [];\n    if (!skilldata.areadata.some(el => { return el < 1; }))\n    {\n      for (let i = 0; i < skilldata.areadata.length; i++)\n      {\n        area[skilldata.areadata[i] - 1] = { backgroundColor: \"rgb(255, 213, 0)\" };\n      }\n    }\n    else\n    {\n      for (let i = 0; i < 9; i++)\n      {\n        let rgb = [255, Math.round((213 - 128) / 0.5 * (skilldata.areadata[i] - 0.5) + 128), 0];\n        if (skilldata.areadata[i] === 0) { rgb = [45, 45, 45]; }\n        area[i] = { backgroundColor: `rgb(${rgb})` };\n      }\n    }\n\n    return (\n      <div className=\"skillview-container\">\n        <div className=\"skill-name\">\n          <img className='icon-attr' src={\"images/\" + attr + \".png\"} alt={attr + \" icon\"} /><h5> Lv. 1</h5> <h3> {skilldata.name} </h3>\n        </div>\n        <div className=\"skill-area\">\n          <table>\n            <tbody>\n              <tr>\n                <td style={area[6]}></td><td style={area[7]}></td><td style={area[8]}></td>\n              </tr>\n              <tr>\n                <td style={area[3]}></td><td style={area[4]}></td><td style={area[5]}></td>\n              </tr>\n              <tr>\n                <td style={area[0]}></td><td style={area[1]}></td><td style={area[2]}></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className=\"skill-description\">\n          <p>{skilldata.description.replace(/\\$\\((\\d+\\.*\\d*)\\)/g, (skillpower)+\" ($1배)\").split('<br>').map((line, i) => <span key={i}>{line}<br /></span>)}</p>\n        </div>\n        <div className=\"skill-range\">\n          射程距離 {skilldata.range}<br />AP-{skilldata.AP}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nclass InfoView extends React.Component\n{\n  render()\n  {\n    return (\n      <div className=\"skillview-container info-description\">\n        <h3>대상 情報</h3>\n        <p>{this.props.enemyInfo.split('<br>').map((line, i) => <span key={i}>{line}<br /></span>)}</p>\n      </div>\n    );\n  }\n}\n\nexport default Skill;","import React from 'react';\nimport * as Common from './common.js';\nimport NavBar from './NavBar.js';\nimport Info from './Info.js';\nimport Skill from './Skill.js';\nimport './App.css';\n\nclass App extends React.Component\n{\n  state = {\n    \"enemyIndex\": null,\n    \"lvl\": null,\n    \"lvlpool\": false,\n    \"enemyData\": null,\n    \"skillData\": null,\n    \"SpottedStage\": null,\n    \"isStageExpanded\": false\n  };\n\n  constructor(props)\n  {\n    console.log(\"constructor\");\n    super(props);\n    this.loadAreaData(this.props.enemyIndex);\n  }\n\n  loadData = async (enemyIndex) =>\n  {\n    let enemyData = await Common.loadEnemyData(enemyIndex);\n    let skillDataList = await Common.loadSkillDataList();\n    let lvl = this.state.lvl || this.props.enemyLVL;\n\n    let searchresult = new Map();\n    let lvlsearchresult = false;\n    this.areadatalist.forEach(areadata =>\n    {\n      let searcharea = areadata.stage.filter(stageelem => stageelem.wave.some(waveelem => waveelem.enemylist.some(pos => pos.index === enemyIndex)))\n        .map(stage =>\n        {\n          let obj = { \"title\": stage.title };\n          ('name' in stage) && (obj.name = stage.name);\n          return obj;\n        });\n      if (searcharea.length > 0)\n      {\n        if (areadata.title.includes(\"Daily\"))\n        {\n          searchresult.has(\"Daily\") ? searchresult.get(\"Daily\").push(...searcharea) : searchresult.set(\"Daily\", searcharea);\n        }\n        else searchresult.set(areadata.title, searcharea);\n      }\n    });\n\n    if (\"uncertainstat\" in enemyData && enemyData.uncertainstat)\n    {\n      lvlsearchresult = [];\n      this.areadatalist.forEach(areadata => areadata.stage.forEach(stageelem => stageelem.wave.forEach(waveelem => waveelem.enemylist.forEach(pos =>\n      {\n        if (pos.index === enemyIndex)\n        {\n          lvlsearchresult.push(pos.level);\n        }\n      }))));\n      lvl=lvlsearchresult[0];\n    }\n    this.setState(prevstate => ({\n      ...prevstate,\n      \"enemyIndex\": enemyIndex,\n      \"enemyData\": enemyData,\n      \"lvl\": parseInt(lvl),\n      \"lvlpool\": lvlsearchresult,\n      \"skillData\": enemyData.skills.map(index => skillDataList[index]),\n      \"SpottedStage\": searchresult\n    }));\n  };\n\n  loadAreaData = async enemyIndex =>\n  {\n    const arealist = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"Daily1\", \"Daily2\", \"Daily3\", \"Ev11\", \"Ev21\", \"Ev22\", \"Ev23\", \"Ev31\", \"Ev41\", \"Ev51\", \"Ev52\", \"Ev61\", \"Ev62\", \"Ev71\", \"Ev72\", \"Ev73\", \"Ev81\", \"Ev82\"];\n    this.areadatalist = await Promise.all(arealist.map(areaindex => Common.loadAreaData(areaindex)));\n    this.loadData(enemyIndex);\n  }\n\n  handleLvlChange = (action) =>\n  {\n    let lvl = this.state.lvl;\n    if (this.state.lvlpool)\n    {\n      let lvlpool = this.state.lvlpool;\n      if (action === '+')\n      {\n        if(lvlpool.indexOf(lvl)<lvlpool.length-1)\n        {\n          lvl = lvlpool[lvlpool.indexOf(lvl)+1];\n        }\n        else\n        {\n          lvl = lvlpool[lvlpool.indexOf(lvl)];\n        }\n      }\n      else if (action === '-')\n      {\n        if(lvlpool.indexOf(lvl)>0)\n        {\n          lvl = lvlpool[lvlpool.indexOf(lvl)-1];\n        }\n        else\n        {\n          lvl = lvlpool[lvlpool.indexOf(lvl)];\n        }\n      }\n    }\n    else\n    {\n      if (action === '+')\n      {\n        lvl++;\n      }\n      else if (action === '-')\n      {\n        lvl > 1 && lvl--;\n      }\n      else\n      {\n        lvl = parseInt((action.length === 0 || action < 1) ? 1 : action);\n      }\n    }\n    this.setState(prevstate => ({\n      ...prevstate,\n      \"lvl\": lvl\n    }));\n  }\n\n  handleEnemyChange = index =>\n  {\n    this.loadData(index);\n  }\n\n  toggleExpandStage = () =>\n  {\n    this.setState((prevstate) => ({ ...prevstate, \"isStageExpanded\": prevstate.isStageExpanded ^ true }));\n  };\n\n  isBottom(el)\n  {\n    return el.getBoundingClientRect().bottom <= window.innerHeight;\n  }\n\n  trackScrolling = () =>\n  {\n    const wrappedElement = document.querySelector(\".content\");\n    if (this.isBottom(wrappedElement))\n    {\n      console.log('header bottom reached');\n      document.removeEventListener('scroll', this.trackScrolling);\n    }\n  };\n\n  componentDidMount()\n  {\n    console.log(\"componentDidMount\")\n    document.addEventListener('scroll', this.trackScrolling);\n  }\n\n  componentDidUpdate()\n  {\n    console.log(\"componentDidUpdate\")\n  }\n\n  render()\n  {\n    console.log(\"renderApp\")\n    return (\n      this.state.enemyData == null ? <div>Loading...</div>\n        :\n        <div className=\"container\">\n          <div className=\"nav-container\">\n            <NavBar onEnemyChange={this.handleEnemyChange} />\n          </div>\n          <div className=\"content-container\">\n            <div className=\"content\">\n              <Info data={this.state} onLvlChange={this.handleLvlChange} />\n              <Skill data={this.state} index={this.props.enemyIndex} />\n              <Stage SpottedStage={this.state.SpottedStage} isStageExpanded={this.state.isStageExpanded} toggleExpandStage={this.toggleExpandStage} />\n            </div>\n          </div>\n        </div>\n    );\n  }\n}\n\nconst Stage = props =>\n{\n  return (\n    <div className=\"stage\">\n      <div className=\"stage-header\" onClick={props.toggleExpandStage}>등장 ステージ<i className=\"material-icons\">{(props.isStageExpanded ? \"expand_less\" : \"expand_more\")}</i></div>\n      <div className={\"stage-inner\" + (props.isStageExpanded ? \"\" : \" stage-inner-hidden\")}>\n        {\n          props.SpottedStage.size === 0 ? <table key=\"stagetable\"><thead><tr><th>영원의 전장 (업데이트 예정)</th></tr></thead></table> :\n            Array.from(props.SpottedStage, ([key, value]) => (\n              <table key={key}>\n                <thead>\n                  {key.includes(\"Daily\") ? \"\" : <tr><th colSpan={value.length}>{key + (isNaN(key) ? \"\" : \"エリア\")}</th></tr>}\n                </thead>\n                <tbody>\n                  <tr>{value.map(stage => (<td key={stage.title}><a href={\"https://logroid.github.io/stage.html?stagetitle=\" + stage.title}>{stage.name || stage.title}</a></td>))}</tr>\n                </tbody>\n              </table>\n            ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Common from './common.js';\nimport App from './App.js';\nimport './index.css';\n\nvar enemyIndex = Common.getURLParameter('enemy') || \"NightChick_N\";\nvar enemyLVL = Common.getURLParameter('lvl') || 1;\n\nReactDOM.render(<App enemyIndex = {enemyIndex} enemyLVL = {enemyLVL} />, document.getElementById('root'));\n"],"sourceRoot":""}